{"version":3,"sources":["components/Button/Button.tsx","assets/data/data.ts","components/TimeFrames/TimeFrames.tsx","components/Charts/Charts.tsx","components/DataError/DataError.tsx","components/View/View.tsx","components/SearchFields/SearchFields.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","onClick","className","apexState","series","data","apiKeys","inputsValidation","timeFrameOptions","TimeFrames","timeFrame","map","option","axios","defaults","baseURL","Charts","savedCurrencies","useState","historicalCharts","setHistoricalCharts","chartState","setChartState","beforeDataLoadedState","setBeforeDataLoadedState","setTimeFrame","useEffect","get","then","finally","dataForRanding","x","date","y","open","low","high","close","slice","reverse","arr","options","type","DataError","errorStatus","View","dataError","setDataError","currencyPairRate","setCurrencyPairRate","previousPairRate","setPreviousPairRate","priceColor","setPriceColor","setErrorStatus","beforeGetDataState","setBeforeGetDataState","prevRateRef","useRef","getCurrencyRateData","catch","error","response","status","length","interval","setInterval","current","price","timeout","setTimeout","clearTimeout","clearInterval","style","backgroundColor","title","name","color","change","changesPercentage","SearchFields","firstCurrencyValue","onFirstCurrencyValueChange","secondCurrencyValue","onSecondCurrencyValueChange","inputEl","focus","ref","value","placeholder","maxLength","onChange","e","target","test","Header","src","alt","App","setFirstCurrencyValue","setSecondCurrencyValue","setSavedCurrencies","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","transition","Flip","theme","pauseOnFocusLoss","draggable","pauseOnHover","toUpperCase","toast","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be919fa6.chunk.js","sourcesContent":["import { FC } from 'react';\r\nimport './Button.scss';\r\n\r\nexport type ButtonProps = {\r\n  onClick: () => void;\r\n};\r\n\r\nconst Button: FC<ButtonProps> = ({ onClick }) => {\r\n  return (\r\n    <button className=\"button\" onClick={onClick}>\r\n      Search\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const apexState = {\r\n  series: [\r\n    {\r\n      data: [],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const apiKeys = [\r\n  '787724816ddef5af6399ca6fd5426676',\r\n  '723fc1e7ede6ef4cd39c83b4a5a525b1',\r\n  '19d9ccfec1ff1750e9a69505e4c82203',\r\n];\r\n\r\nexport const notify = () => toast.error('Please fill full currency codes');\r\n\r\nexport const index = 0;\r\n\r\nexport const inputsValidation = /^[a-zA-Z]+$/;\r\n\r\nexport const timeFrameOptions = ['5min', '10min', '15min', '30min', '1hour', '4hour'];","import { FC } from 'react';\r\nimport { timeFrameOptions } from '../../assets/data/data';\r\nimport './TimeFrames.scss';\r\n\r\nexport type TimeFramesProps = {\r\n  onClick: (arr: string) => void;\r\n  timeFrame: string;\r\n};\r\n\r\nconst TimeFrames: FC<TimeFramesProps> = ({ onClick, timeFrame }) => {\r\n  return (\r\n    <div className=\"time-frame\">\r\n      {timeFrameOptions.map((option) => (\r\n        <button\r\n          className={`time-frame__button ${option === timeFrame && 'active'}`}\r\n          onClick={() => onClick(option)}\r\n          key={option}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeFrames;\r\n","import './Charts.scss';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport axios from 'axios';\r\nimport { FC, useEffect, useState } from 'react';\r\nimport TimeFrames from '../TimeFrames/TimeFrames';\r\nimport { HistoricalCharts } from '../../assets/types/types';\r\nimport { apexState, apiKeys, index } from '../../assets/data/data';\r\n\r\naxios.defaults.baseURL = 'https://financialmodelingprep.com/';\r\n\r\nexport type ChartsProps = {\r\n  savedCurrencies: string;\r\n};\r\n\r\nconst Charts: FC<ChartsProps> = ({ savedCurrencies }) => {\r\n  const [historicalCharts, setHistoricalCharts] = useState<HistoricalCharts[]>(\r\n    []\r\n  );\r\n  const [chartState, setChartState] = useState<ApexOptions>(apexState);\r\n  const [beforeDataLoadedState, setBeforeDataLoadedState] = useState(true);\r\n  const [timeFrame, setTimeFrame] = useState('15min');\r\n\r\n  const clickHandler = (arr: string) => {\r\n    setTimeFrame(arr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `api/v3/historical-chart/${timeFrame}/${savedCurrencies}?apikey=${apiKeys[index]}`\r\n      )\r\n      .then(({ data }) => {\r\n        setHistoricalCharts(data);\r\n      })\r\n      .finally(() => {\r\n        setBeforeDataLoadedState(false);\r\n      });\r\n  }, [timeFrame, beforeDataLoadedState, savedCurrencies]);\r\n\r\n  useEffect(() => {\r\n    const dataHistory = historicalCharts.map(\r\n      ({ date, open, low, high, close }) => {\r\n        return { x: date, y: [open, low, high, close] };\r\n      }\r\n    );\r\n    const dataForRanding = {\r\n      series: [\r\n        {\r\n          data: dataHistory.slice(0, 100).reverse(),\r\n        },\r\n      ],\r\n    };\r\n    setChartState(dataForRanding);\r\n  }, [historicalCharts]);\r\n\r\n  return (\r\n    <div className=\"wraper-container\">\r\n      <TimeFrames onClick={clickHandler} timeFrame={timeFrame} />\r\n      {!beforeDataLoadedState && (\r\n        <ReactApexChart\r\n          options={chartState}\r\n          series={chartState.series}\r\n          type=\"candlestick\"\r\n          className=\"charts\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import { FC } from 'react';\r\nimport './DataError.scss';\r\n\r\nexport type ErrorProps = {\r\n  errorStatus: number;\r\n};\r\n\r\nconst DataError: FC<ErrorProps> = ({ errorStatus }) => {\r\n  return (\r\n    <div className=\"data-error\">\r\n      {errorStatus === 403\r\n        ? 'Data request limit reached for today'\r\n        : 'Some kind of data error'}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataError;\r\n","import axios from 'axios';\r\nimport { FC, useEffect, useRef, useState } from 'react';\r\nimport { apiKeys, index } from '../../assets/data/data';\r\nimport { CurrencyRate } from '../../assets/types/types';\r\nimport Charts from '../Charts/Charts';\r\nimport DataError from '../DataError/DataError';\r\nimport './View.scss';\r\n\r\naxios.defaults.baseURL = 'https://financialmodelingprep.com/';\r\n\r\nexport type ViewProps = {\r\n  savedCurrencies: string;\r\n  dataError: boolean;\r\n  setDataError: (arr: boolean) => void;\r\n};\r\n\r\nconst View: FC<ViewProps> = ({ savedCurrencies, dataError, setDataError }) => {\r\n  const [currencyPairRate, setCurrencyPairRate] = useState<CurrencyRate[]>([]);\r\n  const [previousPairRate, setPreviousPairRate] = useState(0);\r\n  const [priceColor, setPriceColor] = useState('white');\r\n  const [errorStatus, setErrorStatus] = useState(0);\r\n  const [beforeGetDataState, setBeforeGetDataState] = useState(true);\r\n\r\n  const prevRateRef = useRef(0);\r\n\r\n  const getCurrencyRateData = () => {\r\n    axios\r\n      .get(`api/v3/quote/${savedCurrencies}?apikey=${apiKeys[index]}`)\r\n      .then(({ data }) => {\r\n        setCurrencyPairRate(data);\r\n        setBeforeGetDataState(false);\r\n      })\r\n      .catch((error) => {\r\n        setDataError(true);\r\n        setErrorStatus(error.response.status);\r\n        setBeforeGetDataState(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (savedCurrencies) {\r\n      getCurrencyRateData();\r\n    }\r\n  }, [savedCurrencies]);\r\n\r\n  useEffect(() => {\r\n    if (currencyPairRate.length > 0 && !beforeGetDataState) {\r\n      const interval = setInterval(() => {\r\n        getCurrencyRateData();\r\n      }, 10000);\r\n\r\n      prevRateRef.current = currencyPairRate[0].price;\r\n      setPreviousPairRate(prevRateRef.current);\r\n\r\n      if (previousPairRate < currencyPairRate[0].price) {\r\n        setPriceColor('green');\r\n      } else if (previousPairRate > currencyPairRate[0].price) {\r\n        setPriceColor('red');\r\n      }\r\n\r\n      const timeout = setTimeout(() => {\r\n        setPriceColor('white');\r\n      }, 500);\r\n      return () => (clearTimeout(timeout), clearInterval(interval));\r\n    }\r\n  }, [currencyPairRate]);\r\n\r\n  return (\r\n    <>\r\n      {dataError ? (\r\n        <DataError errorStatus={errorStatus} />\r\n      ) : currencyPairRate.length > 0 ? (\r\n        <div className=\"view\">\r\n          <div className=\"view__contanier\">\r\n            <div\r\n              className=\"view__currencies-main-data\"\r\n              style={{ backgroundColor: priceColor }}\r\n              title=\"currency pair\"\r\n            >\r\n              {`${currencyPairRate[0].name}  ${currencyPairRate[0].price}`}\r\n            </div>\r\n            <div\r\n              className=\"view__currencies-main-changes\"\r\n              style={{\r\n                color: currencyPairRate[0].change < 0 ? 'red' : 'green',\r\n              }}\r\n              title=\"actual price\"\r\n            >{`${currencyPairRate[0].change} (${currencyPairRate[0].changesPercentage}%)`}</div>\r\n          </div>\r\n          <Charts savedCurrencies={savedCurrencies} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"view__initial-state\">\r\n          {beforeGetDataState ? 'Please choose currency pair' : 'Nothing found'}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import { FC, useEffect, useRef } from 'react';\r\nimport { inputsValidation } from '../../assets/data/data';\r\nimport './SearchFields.scss';\r\n\r\nexport type SearchFieldsProps = {\r\n  firstCurrencyValue: string;\r\n  onFirstCurrencyValueChange: (arr: string) => void;\r\n  secondCurrencyValue: string;\r\n  onSecondCurrencyValueChange: (arr: string) => void;\r\n};\r\n\r\nconst SearchFields: FC<SearchFieldsProps> = ({\r\n  firstCurrencyValue,\r\n  onFirstCurrencyValueChange,\r\n  secondCurrencyValue,\r\n  onSecondCurrencyValueChange,\r\n}) => {\r\n  const inputEl = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    inputEl.current?.focus();\r\n  }, []);\r\n\r\n  const clickHandlerTurnOverTickers = () => {\r\n    onFirstCurrencyValueChange(secondCurrencyValue);\r\n    onSecondCurrencyValueChange(firstCurrencyValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"search-field\"\r\n        type=\"text\"\r\n        ref={inputEl}\r\n        value={firstCurrencyValue}\r\n        placeholder=\"e.g. usd\"\r\n        title=\"Only letters are available\"\r\n        maxLength={3}\r\n        onChange={(e) => {\r\n          if (e.target.value === '' || inputsValidation.test(e.target.value))\r\n            onFirstCurrencyValueChange(e.target.value);\r\n        }}\r\n      />\r\n      <button\r\n        title=\"Turn over the currencies\"\r\n        className=\"search-field__turn-over-button\"\r\n        onClick={clickHandlerTurnOverTickers}\r\n      >\r\n        ⇄\r\n      </button>\r\n      <input\r\n        className=\"search-field\"\r\n        type=\"text\"\r\n        value={secondCurrencyValue}\r\n        placeholder=\"e.g. eur\"\r\n        title=\"Only letters are available\"\r\n        maxLength={3}\r\n        onChange={(e) => {\r\n          if (e.target.value === '' || inputsValidation.test(e.target.value))\r\n            onSecondCurrencyValueChange(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFields;\r\n","import './Header.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Forex Live Wall</h1>\r\n      <div className=\"header__container\">\r\n        <h2>Powered by</h2>\r\n        <img className=\"header__logo\" src=\"images/28stone.svg\" alt=\"28stone\" />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\nimport './App.scss';\r\nimport Button from './components/Button/Button';\r\nimport View from './components/View/View';\r\nimport SearchFields from './components/SearchFields/SearchFields';\r\nimport { Flip, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Header from './components/Header/Header';\r\nimport { notify } from './assets/data/data';\r\n\r\nconst App = () => {\r\n  const [firstCurrencyValue, setFirstCurrencyValue] = useState('');\r\n  const [secondCurrencyValue, setSecondCurrencyValue] = useState('');\r\n  const [savedCurrencies, setSavedCurrencies] = useState('');\r\n  const [dataError, setDataError] = useState(false);\r\n\r\n  const clickHandlerSearch = () => {\r\n    const value = (firstCurrencyValue + secondCurrencyValue).toUpperCase();\r\n\r\n    if (value.length !== 6 && !dataError) {\r\n      notify();\r\n    } else {\r\n      setSavedCurrencies(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        transition={Flip}\r\n        theme={'dark'}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Header />\r\n      <main className=\"main\">\r\n        <div className=\"container\">\r\n          <SearchFields\r\n            firstCurrencyValue={firstCurrencyValue}\r\n            onFirstCurrencyValueChange={setFirstCurrencyValue}\r\n            secondCurrencyValue={secondCurrencyValue}\r\n            onSecondCurrencyValueChange={setSecondCurrencyValue}\r\n          />\r\n          <Button onClick={clickHandlerSearch} />\r\n        </div>\r\n\r\n        <View\r\n          savedCurrencies={savedCurrencies}\r\n          dataError={dataError}\r\n          setDataError={setDataError}\r\n        />\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}